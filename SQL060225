-- Создаем базу данных
CREATE DATABASE studentsTARgv24;
USE studentsTARgv24;


-- Создаем таблицу students
CREATE TABLE students(
    student_id INT PRIMARY KEY IDENTITY(1,1),
    full_name VARCHAR(100),
    class_name VARCHAR(50),
    birth_date DATE,
    group_name VARCHAR(50)
);

-- Просмотр данных в таблице
SELECT * FROM students;

-- Процедура для добавления нового студента
CREATE PROCEDURE addStudent
@fullName VARCHAR(100),
@className VARCHAR(50),
@birthDate DATE,
@groupName VARCHAR(50)

AS
BEGIN
INSERT INTO students(full_name, class_name, birth_date, group_name)

VALUES(

@fullName, @className, @birthDate, @groupName);
    
    -- Показываем всех студентов после добавления
    SELECT * FROM students;
END;

-- Процедура для обновления группы студента
CREATE PROCEDURE updateStudentGroup
    @studentId INT,
    @newGroupName VARCHAR(50)
AS
BEGIN
    -- Обновляем группу студента по ID
    UPDATE students
    SET group_name = @newGroupName
    WHERE student_id = @studentId;

    -- Показываем все студенты после обновления
    SELECT * FROM students;
END;

SELECT * 
FROM sys.objects
WHERE type = 'P' AND name = 'deleteStudent';

-- Процедура для удаления студента по ID
CREATE PROCEDURE deleteStudent
    @studentId INT
AS
BEGIN
    -- Показываем студента перед удалением
    SELECT * FROM students;

    -- Удаляем студента по ID
    DELETE FROM students
    WHERE student_id = @studentId;

    -- Показываем оставшихся студентов
    SELECT * FROM students;
END;

-- Добавляем нового студента
EXEC addStudent 'Veronika Vanitseva', 'Mathematics', '1999-09-30', 'A';






CREATE DATABASE procTARgv24;



USE procTARgv24;

CREATE TABLE uudised(

uudisID int PRIMARY KEY identity(1,1),

uudiseTEEMA varchar(50),

kuupaev date,

autor varchar(25),

kirjeldus text

)

SELECT*FROM uudised;

INSERT INTO uudised(uudiseTeema, kuupaev, autor, kirjeldus)

VALUES(

'udune ilm', '2025-02-06', 'postimees', 'Lounani ')

--protseduuri loomine

--sisestab uudised tabelisse ja kohe naitab

CREATE PROCEDURE lisaUudis
@uusTeema varchar(50), 
@paev date,
@autor varchar(20),
@kirjeldus text

AS
BEGIN
INSERT INTO uudised(uudiseTeema, kuupaev, autor, kirjeldus)

VALUES(

@uusTeema, @paev, @autor, @kirjeldus);
SELECT * FROM uudised;


END;
--kutse
EXEC lisaUudis 'windows 11', '2025-02-06', 'õpetaja Pant', 'w11 ei tööta'
--teine kutse võimalus
EXEC lisaUudis
@uusTeema='1.märts on juba kevad', 
@paev='2025-02-06'
@autor='test',
@kirjeldus='puudub';

--protsedur, mis kustutab tabelist id järgi
CREATE PROCEDURE kustutaUudis
@id int
AS
BEGIN
SELECT * FROM uudised;
DELETE FROM uudised WHERE uudisID=@id
SELECT * FROM uudised;
END;
--
EXEC
--kutse
EXEC kustutaUudis 3
EXEC kustutaUudis @id=3

UPDATE uudised SET kirjeldus='uus kirjendus'
WHERE kirjendus Like'puudub';
SELECT * FROM uudised;
--protseduur mis uuendab andmed tabelis/UPDATE

CREATE Procedure uuendaKirjeldus
@uuskirjeldus text
AS
BEGIN
SELECT * FROM uudised;
UPDATE uudised SET kirjeldus='uus kirjendus'
WHERE kirjendus Like'puudub';
SELECT * FROM uudised;
END;
--kutse
EXEC uuendaKirjeldus 'uus tekst kirjenduses';
--protseduur mis otsib ja näitab uudist esimene tähte järgi

CREATE PROCEDURE otsingUudiseTeema
@taht char (1)
AS
BEGIN
SELECT * FROM
WHERE uudiseTeema LIKE @taht + '%';
END;
--kutse
EXEC otsingUudiseTeema 'w';
